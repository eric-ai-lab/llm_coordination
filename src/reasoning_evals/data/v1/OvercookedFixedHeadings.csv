Concept,Map,Game Description,JP Directive,TOM Directive,EC Directive,State Description - Reduced Action Set,State Description,JP Question,JP Answer Ordinal,JP Answer,TOM Question,TOM Answer Ordinal,TOM Answer,EC Question,EC Answer Ordinal,EC Answer,State Prompt - Environment Comprehension ,Expected Action can also be,Partner Interpreter,Verifier,Tags,GPT-3.5-turbo,GPT-4-turbo,LLM+Verifier+PI,LLM+Verifier,LLM-Only,JP Question Reduced Action Set
pick up plate when other agent is placing third onion,Cramped Room,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is rectangular with 2 onions dispensers (o0, o1), cooker (c0), plate dispenser (p0) and delivery area (d0). Additionally there are kitchen counters (k0 to k8) which can be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: place onion on k1., pick up onion from k1., place onion in c0., pick up onion from o0., place onion in c0..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is blocked by Bob. c0 is 0 units away. k5 is blocked by Bob. Closest empty kitchen counter k1 is 1 units away. 
<Bob's location>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is 0 units away. c0 is blocked by Alice. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. 
 
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., wait., move away.].","my action history: place onion on k1., pick up onion from k1., place onion in c0., pick up onion from o0., place onion in c0..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is blocked by Bob. c0 is 0 units away. k5 is blocked by Bob. Closest empty kitchen counter k1 is 1 units away. 
<Bob's location>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is 0 units away. c0 is blocked by Alice. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. 
 
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., place onion on k1., place plate on k1., place onion in c0., load soup on plate from c0., place soup for delivery in d0., wait., move away.].","my action history: place onion on k1., pick up onion from k1., place onion in c0., pick up onion from o0., place onion in c0..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is blocked by Bob. c0 is 0 units away. k5 is blocked by Bob. Closest empty kitchen counter k1 is 1 units away. 
<Bob's location>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is 0 units away. c0 is blocked by Alice. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. 
 
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion on k1.
F. place plate on k1.
G. place onion in c0.
H. load soup on plate from c0.
I. place soup for delivery in d0.
J. wait.
K. move away..
",C,pick up plate from p0.,"<Inventory>: I am holding nothing. Bob is holding onion.
<My location:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is blocked by Bob. c0 is 0 units away. k5 is blocked by Bob. Closest empty kitchen counter k1 is 1 units away. 
<Bob's location>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is 0 units away. c0 is blocked by Alice. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. 
 

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion on closest kitchen counter.
F. place plate on closest kitchen counter.
G. place onion in c0.
H. load soup on plate from c0.
I. place soup for delivery in d0.
J. wait.
K. move away..
",G,place onion in c0.,"<Inventory>: I am holding nothing. Bob is holding onion.
<My location:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is blocked by Bob. c0 is 0 units away. k5 is blocked by Bob. Closest empty kitchen counter k1 is 1 units away. 
<Bob's location>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is 0 units away. c0 is blocked by Alice. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is on. soup in c0 is still cooking. 
 

Who is currently able to pick up a plate? 
Available Answers: 
A. Only Bob.
B. Only I am.
C. Neither of us.
D. Both of us.",B,Only Bob.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Partner Aware Planning, Theory of Mind, Environmental Awareness","pick up onion from o0.',","pick up onion from o0.',",1,,1,"my action history: place onion on k1., pick up onion from k1., place onion in c0., pick up onion from o0., place onion in c0..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is blocked by Bob. c0 is 0 units away. k5 is blocked by Bob. Closest empty kitchen counter k1 is 1 units away. 
<Bob's location>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is 0 units away. c0 is blocked by Alice. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is on. soup in c0 is still cooking. 
 
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. wait.
F. move away..
"
pick up plate when other agent is placing third onion,Asymmetric Advantages,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment has two partitions. Bob is in the left partition with access to onion dispenser o0, delivery area d0, plate dispenser p0 and kitchen counters k0, k1, k2, k3, k4, k11, k12, k16, k18, k20, k21, k22, k23. Alice is in the right partition and has access to onion dispenser o1, delivery area d1, plate dispenser p1 and kitchen counters k6, k7, k8, k9, k10, k14, k15, k17, k19, k25, k26, k27, k28. Both have access to both cookers c0 and c1 which are on the partition line. Kitchen counters (k0 to k28) which can be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding onion.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  
<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking.  
  
Available Actions: [pick up onion from o0., pick up plate from p0., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., place onion on k10., place plate on k10., wait., move away.].","my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding onion.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  
<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking.  
  
Available Actions: [pick up onion from o0., pick up onion from o1., place onion in c0., place onion in c1., pick up plate from p0., pick up plate from p1., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., place soup for delivery in d1., place onion on k10., place plate on k10., wait., move away.].","my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding onion.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  
<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking.  
  
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. place onion in c0.
D. place onion in c1.
E. pick up plate from p0.
F. pick up plate from p1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for delivery in d0.
J. place soup for delivery in d1.
K. place onion on k10.
L. place plate on k10.
M. wait.
N. move away..
",E,pick up plate from p0.,"<Inventory>: I am holding nothing. Bob is holding onion.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  
<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking.  
  

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. place onion in c0.
D. place onion in c1.
E. pick up plate from p0.
F. pick up plate from p1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for delivery in d0.
J. place soup for delivery in d1.
K. place onion on closest kitchen counter.
L. place plate on closest kitchen counter.
M. wait.
N. move away..
",C,place onion in c0.,"<Inventory>: I am holding nothing. Bob is holding onion.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  
<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking.  
  

Which onion dispenser is closest to the cookers? 
Available Actions: 
A. Onion dispenser o0 is closest to the cookers.
B. Onion dispenser o1 is closest to the cookers.
C. Neither are close to the cookers.
",B,Onion Dispenser o1 is closest to the cookers.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",,"pick up plate from p0.',","pick up plate from p0.',",,,,"my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding onion.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  
<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking.  
  
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up plate from p0.
C. load soup on plate from c0.
D. load soup on plate from c1.
E. place soup for delivery in d0.
F. place onion on k10.
G. place plate on k10.
H. wait.
I. move away..
"
pick up plate when onion is closer for partner,Asymmetric Advantages,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment has two partitions. Bob is in the left partition with access to onion dispenser o0, delivery area d0, plate dispenser p0 and kitchen counters k0, k1, k2, k3, k4, k11, k12, k16, k18, k20, k21, k22, k23. Alice is in the right partition and has access to onion dispenser o1, delivery area d1, plate dispenser p1 and kitchen counters k6, k7, k8, k9, k10, k14, k15, k17, k19, k25, k26, k27, k28. Both have access to both cookers c0 and c1 which are on the partition line. Kitchen counters (k0 to k28) which can be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding nothing.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  

<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away.  
         
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.  
  
Available Actions: [pick up onion from o0., pick up plate from p0., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., place onion on k10., place plate on k10., wait., move away.].","my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding nothing.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  

<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away.  
         
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.  
  
Available Actions: [pick up onion from o0., pick up onion from o1., place onion in c0., place onion in c1., pick up plate from p0., pick up plate from p1., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., place soup for delivery in d1., place onion on k10., place plate on k10., wait., move away.].","my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding nothing.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  

<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away.  
         
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.  
  
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. place onion in c0.
D. place onion in c1.
E. pick up plate from p0.
F. pick up plate from p1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for delivery in d0.
J. place soup for delivery in d1.
K. place onion on k10.
L. place plate on k10.
M. wait.
N. move away..
",E,pick up plate from p0.,"<Inventory>: I am holding nothing. Bob is holding nothing.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  

<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away.  
         
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.  
  

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. place onion in c0.
D. place onion in c1.
E. pick up plate from p0.
F. pick up plate from p1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for delivery in d0.
J. place soup for delivery in d1.
K. place onion on closest kitchen counter.
L. place plate on closest kitchen counter.
M. wait.
N. move away..
",C,place onion in c0.,"<Inventory>: I am holding nothing. Bob is holding nothing.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  

<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away.  
         
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.  
  

Based on proximity, who is in the best position to put the last onion in c0?
Available Actions: 
A. I am.
B. Bob is.
C. There's no difference.",B,Bob is.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",,"pick up plate from p0.',","pick up onion from o0.',",,,,"my action history: pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding nothing.  
  
<My location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away.  

<Bob's location>: o0 is inaccessible. o1 is 0 units away. p0 is inaccessible. p1 is 1 units away. d0 is inaccessible. d1 is 3 units away. c0 is 0 units away. c1 is 1 units away.  
         
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.  
  
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up plate from p0.
C. load soup on plate from c0.
D. load soup on plate from c1.
E. place soup for delivery in d0.
F. place onion on k10.
G. place plate on k10.
H. wait.
I. move away..
"
start preparing next soup,Asymmetric Advantages,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment has two partitions. Bob is in the left partition with access to onion dispenser o0, delivery area d0, plate dispenser p0 and kitchen counters k0, k1, k2, k3, k4, k11, k12, k16, k18, k20, k21, k22, k23. Alice is in the right partition and has access to onion dispenser o1, delivery area d1, plate dispenser p1 and kitchen counters k6, k7, k8, k9, k10, k14, k15, k17, k19, k25, k26, k27, k28. Both have access to both cookers c0 and c1 which are on the partition line. Kitchen counters (k0 to k28) which can be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding plate.  

<My location>: o0 is inaccessible. o1 is 2 units away. p0 is inaccessible. p1 is 0 units away. d0 is inaccessible. d1 is 4 units away. c0 is 1 units away. c1 is 0 units away.  
<Bob's location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.
  
Available Actions: [pick up onion from o1., pick up plate from p1., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d1., place onion on k10., place plate on k10., wait., move away.].","my action history: pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding plate.  

<My location>: o0 is inaccessible. o1 is 2 units away. p0 is inaccessible. p1 is 0 units away. d0 is inaccessible. d1 is 4 units away. c0 is 1 units away. c1 is 0 units away.  
<Bob's location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.
  
Available Actions: [pick up onion from o0., pick up onion from o1., place onion in c0., place onion in c1., pick up plate from p0., pick up plate from p1., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., place soup for delivery in d1., place onion on k10., place plate on k10., wait., move away.].","my action history: pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding plate.  

<My location>: o0 is inaccessible. o1 is 2 units away. p0 is inaccessible. p1 is 0 units away. d0 is inaccessible. d1 is 4 units away. c0 is 1 units away. c1 is 0 units away.  
<Bob's location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.
  
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. place onion in c0.
D. place onion in c1.
E. pick up plate from p0.
F. pick up plate from p1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for delivery in d0.
J. place soup for delivery in d1.
K. place onion on k10.
L. place plate on k10.
M. wait.
N. move away..
",B,pick up onion from o1. ,"<Inventory>: I am holding nothing. Bob is holding plate.  

<My location>: o0 is inaccessible. o1 is 2 units away. p0 is inaccessible. p1 is 0 units away. d0 is inaccessible. d1 is 4 units away. c0 is 1 units away. c1 is 0 units away.  
<Bob's location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.
  

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. place onion in c0.
D. place onion in c1.
E. pick up plate from p0.
F. pick up plate from p1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for delivery in d0.
J. place soup for delivery in d1.
K. place onion on closest kitchen counter.
L. place plate on closest kitchen counter.
M. wait.
N. move away..
",G,load soup on plate from c0.,"<Inventory>: I am holding nothing. Bob is holding plate.  

<My location>: o0 is inaccessible. o1 is 2 units away. p0 is inaccessible. p1 is 0 units away. d0 is inaccessible. d1 is 4 units away. c0 is 1 units away. c1 is 0 units away.  
<Bob's location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.
  

If I want to progress c1 specifically, what action is immediately required of me? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. wait.
D. move away.",B,pick up onion from o1.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",,"pick up onion from o1.',","pick up onion from o1.',",,,,"my action history: pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0., 
<Inventory>: I am holding nothing. Bob is holding plate.  

<My location>: o0 is inaccessible. o1 is 2 units away. p0 is inaccessible. p1 is 0 units away. d0 is inaccessible. d1 is 4 units away. c0 is 1 units away. c1 is 0 units away.  
<Bob's location:> o0 is 3 units away. o1 is inaccessible. p0 is 1 units away. p1 is inaccessible. d0 is 0 units away. d1 is inaccessible. c0 is 0 units away. c1 is 1 units away.  empty kitchen counter k10 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.
  
What action should I take next? 
Available Actions: 
A. pick up onion from o1.
B. pick up plate from p1.
C. load soup on plate from c0.
D. load soup on plate from c1.
E. place soup for delivery in d1.
F. place onion on k10.
G. place plate on k10.
H. wait.
I. move away..
"
understand the concept of shared counters and distance of partner to shared counter,Forced Coordination,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is split into two partitions, one with each player. In the right partition, Alice has access to cookers (c0, c1),  delivery area (d0) and kitchen counters (k6, k8, k12). In the left partition, Bob has access to onion dispensers (o0, o1), plate dispenser (p0) and kitchen counters (k1, k10). Kitchen counters can be used to temporarily store onions and plates while you do something else. Both players have access to shared counters (s0, s1, s2) which can be used to transfer onions and plates depending on the situation. Note that the objects on the shared counters can be accessed by both players. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.

<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 is empty. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

Available Actions: [place onion on k1., place onion in s0., place onion in s1., place onion in s2., wait., move away.].","my action history: pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.

<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 is empty. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up plate from s0., pick up plate from s1., pick up plate from s2., place onion in c0., place onion in c1., place onion on k1., place plate on k1., place onion in s0., place onion in s1., place onion in s2.,  place plate in s0., place plate in s1., place plate in s2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.].","my action history: pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.

<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 is empty. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on k1.
M. place plate on k1.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
","N,O","[place onion in s1., place onion in s0]","<Inventory>: I am holding onion. Bob is holding nothing.

<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 is empty. s2 is empty. Closest empty kitchen counter k1 is 1 units away.


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
","D,E,W","wait, pick up onion from s0., pick up onion from s1.","<Inventory>: I am holding onion. Bob is holding nothing.

<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 is empty. s2 is empty. Closest empty kitchen counter k1 is 1 units away.


Who is in charge of passing onions and plates to their partner?
Available Actions: 
A. Neither of us.
B. Both of us.
C. I am.
D. Bob is.",C,I am.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Partner Aware Planning, Theory of Mind, Environmental Awareness","place onion on k1.',","place onion in s1.',",1,,1,"my action history: pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.

<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 is empty. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

What action should I take next? 
Available Actions: 
A. place onion on k1.
B. place onion in s0.
C. place onion in s1.
D. place onion in s2.
E. wait.
F. move away..
"
understand the concept of shared counters and distance of partner to shared counter,Forced Coordination,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is split into two partitions, one with each player. In the right partition, Alice has access to cookers (c0, c1),  delivery area (d0) and kitchen counters (k6, k8, k12). In the left partition, Bob has access to onion dispensers (o0, o1), plate dispenser (p0) and kitchen counters (k1, k10). Kitchen counters can be used to temporarily store onions and plates while you do something else. Both players have access to shared counters (s0, s1, s2) which can be used to transfer onions and plates depending on the situation. Note that the objects on the shared counters can be accessed by both players. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o1., place onion in s1., pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

Available Actions: [place onion on k1., place onion in s0., place onion in s2., wait., move away.].","my action history: pick up onion from o1., place onion in s1., pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up plate from s0., pick up plate from s1., pick up plate from s2., place onion in c0., place onion in c1., place onion on k1., place plate on k1., place onion in s0., place onion in s1., place onion in s2.,  place plate in s0., place plate in s1., place plate in s2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.].","my action history: pick up onion from o1., place onion in s1., pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on k1.
M. place plate on k1.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",P,Action: place onion in s2.,"<Inventory>: I am holding onion. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away.


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",E,pick up onion from s1.,"<Inventory>: I am holding onion. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away.


Who is in charge of delivering the cooked soups? 
Available Actions: 
A. I am.
B. Bob is.
C. Neither of us.
D. Both of us.",B,Bob is.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Partner Aware Planning, Theory of Mind, Environmental Awareness","place onion on k1.',","place onion in s2.',",1,,1,"my action history: pick up onion from o1., place onion in s1., pick up onion from o1..
<Inventory>: I am holding onion. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away.

What action should I take next? 
Available Actions: 
A. place onion on k1.
B. place onion in s0.
C. place onion in s2.
D. wait.
E. move away..
"
understand the concept of shared counters and distance of partner to shared counter for a different object,Forced Coordination,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is split into two partitions, one with each player. In the right partition, Alice has access to cookers (c0, c1),  delivery area (d0) and kitchen counters (k6, k8, k12). In the left partition, Bob has access to onion dispensers (o0, o1), plate dispenser (p0) and kitchen counters (k1, k10). Kitchen counters can be used to temporarily store onions and plates while you do something else. Both players have access to shared counters (s0, s1, s2) which can be used to transfer onions and plates depending on the situation. Note that the objects on the shared counters can be accessed by both players. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1., pick up plate from p0..
<Inventory>: I am holding empty plate. Bob is holding nothing.
<My location information:> o0 is 2 units away. o1 is 1 units away. p0 is 0 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 1 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k7 is 0 units away.

Available Actions: [place plate on k7., place plate in s0., place plate in s2., wait., move away.].","my action history: pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1., pick up plate from p0..
<Inventory>: I am holding empty plate. Bob is holding nothing.
<My location information:> o0 is 2 units away. o1 is 1 units away. p0 is 0 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 1 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k7 is 0 units away.

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up plate from s0., pick up plate from s1., pick up plate from s2., place onion in c0., place onion in c1., place onion on k1., place plate on k1., place onion in s0., place onion in s1., place onion in s2.,  place plate in s0., place plate in s1., place plate in s2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.].","my action history: pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1., pick up plate from p0..
<Inventory>: I am holding empty plate. Bob is holding nothing.
<My location information:> o0 is 2 units away. o1 is 1 units away. p0 is 0 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 1 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k7 is 0 units away.

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on k1.
M. place plate on k1.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",S,place plate in s2.,"<Inventory>: I am holding empty plate. Bob is holding nothing.
<My location information:> o0 is 2 units away. o1 is 1 units away. p0 is 0 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 1 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k7 is 0 units away.


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
","E,G,I","pick up onion from s1., pick up plate from s2., pick up plate from s0.","<Inventory>: I am holding empty plate. Bob is holding nothing.
<My location information:> o0 is 2 units away. o1 is 1 units away. p0 is 0 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 1 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k7 is 0 units away.


Who is in charge of putting the ingredients in the cookers? 
Available Actions: 
A. I am.
B. Bob is.
C. Both of us.
D. Neither of us.",B,Bob is.,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Partner Aware Planning, Theory of Mind, Environmental Awareness","place plate in s2.',","place plate on k7.',",1,,1,"my action history: pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1., pick up plate from p0..
<Inventory>: I am holding empty plate. Bob is holding nothing.
<My location information:> o0 is 2 units away. o1 is 1 units away. p0 is 0 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 1 units away. c0 is 1 units away. c1 is 1 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 1 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k7 is 0 units away.

What action should I take next? 
Available Actions: 
A. place plate on k7.
B. place plate in s0.
C. place plate in s2.
D. wait.
E. move away..
"
pick up plate to pass to other agent after they have added 2 onions to pot,Forced Coordination,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is split into two partitions, one with each player. In the right partition, Alice has access to cookers (c0, c1),  delivery area (d0) and kitchen counters (k6, k8, k12). In the left partition, Bob has access to onion dispensers (o0, o1), plate dispenser (p0) and kitchen counters (k1, k10). Kitchen counters can be used to temporarily store onions and plates while you do something else. Both players have access to shared counters (s0, s1, s2) which can be used to transfer onions and plates depending on the situation. Note that the objects on the shared counters can be accessed by both players. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away. 

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s1., wait., move away.].","my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away. 

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up plate from s0., pick up plate from s1., pick up plate from s2., place onion in c0., place onion in c1., place onion on k1., place plate on k1., place onion in s0., place onion in s1., place onion in s2.,  place plate in s0., place plate in s1., place plate in s2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.].","my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away. 

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on k1.
M. place plate on k1.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
","C,A,B","pick up plate from p0.,pick up onion from oN.","<Inventory>: I am holding nothing. Bob is holding onion.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away. 


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",K,place onion in c1.,"<Inventory>: I am holding nothing. Bob is holding onion.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away. 


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Partner Aware Planning, Theory of Mind, Environmental Awareness","pick up onion from o0.',","pick up onion from o1.',",1,,1,"my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from o0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding onion.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 is empty. s1 contains onion. s2 is empty. Closest empty kitchen counter k1 is 1 units away. 

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s1.
E. wait.
F. move away..
"
"there are limited counters, dont keep them occupied",Forced Coordination,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is split into two partitions, one with each player. In the right partition, Alice has access to cookers (c0, c1),  delivery area (d0) and kitchen counters (k6, k8, k12). In the left partition, Bob has access to onion dispensers (o0, o1), plate dispenser (p0) and kitchen counters (k1, k10). Kitchen counters can be used to temporarily store onions and plates while you do something else. Both players have access to shared counters (s0, s1, s2) which can be used to transfer onions and plates depending on the situation. Note that the objects on the shared counters can be accessed by both players. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from s0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 0 units away. c0 is 2 units away. c1 is 2 units away. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. s0 is empty. s1 contains onion. s2 contains onion. k7 is 1 units away. k7 contains plate. Closest empty kitchen counter k1 is 1 units away. 

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up plate from k7., pick up onion from s1., pick up onion from s2., wait., move away.].","my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from s0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 0 units away. c0 is 2 units away. c1 is 2 units away. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. s0 is empty. s1 contains onion. s2 contains onion. k7 is 1 units away. k7 contains plate. Closest empty kitchen counter k1 is 1 units away. 

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up plate from s0., pick up plate from s1., pick up plate from s2., place onion in c0., place onion in c1., place onion on k1., place plate on k1., place onion in s0., place onion in s1., place onion in s2.,  place plate in s0., place plate in s1., place plate in s2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.].","my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from s0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 0 units away. c0 is 2 units away. c1 is 2 units away. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. s0 is empty. s1 contains onion. s2 contains onion. k7 is 1 units away. k7 contains plate. Closest empty kitchen counter k1 is 1 units away. 

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on k1.
M. place plate on k1.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
Y. pick up plate from k7.",Y,pick up plate from k7.,"<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 0 units away. c0 is 2 units away. c1 is 2 units away. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. s0 is empty. s1 contains onion. s2 contains onion. k7 is 1 units away. k7 contains plate. Closest empty kitchen counter k1 is 1 units away. 


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
","G, W","pick up plate from s0., wait.","<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 0 units away. c0 is 2 units away. c1 is 2 units away. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. s0 is empty. s1 contains onion. s2 contains onion. k7 is 1 units away. k7 contains plate. Closest empty kitchen counter k1 is 1 units away. 


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",Environmental Awareness,"pick up plate from k1.',","pick up plate from k7.',",1,,1,"my action history: place onion in s1., pick up onion from o1., place onion in s0., pick up onion from s0., place onion in s1..
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is 1 units away. o1 is 0 units away. p0 is 1 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. 
<Bob's location information>: o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 0 units away. c0 is 2 units away. c1 is 2 units away. s0 is 2 units away. s1 is 1 units away. s2 is 0 units away. 
<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. s0 is empty. s1 contains onion. s2 contains onion. k7 is 1 units away. k7 contains plate. Closest empty kitchen counter k1 is 1 units away. 

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from k7.
E. pick up onion from s1.
F. pick up onion from s2.
G. wait.
H. move away..
"
go to the closer shared counter to pick up,Forced Coordination,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is split into two partitions, one with each player. In the right partition, Alice has access to cookers (c0, c1),  delivery area (d0) and kitchen counters (k6, k8, k12). In the left partition, Bob has access to onion dispensers (o0, o1), plate dispenser (p0) and kitchen counters (k1, k10). Kitchen counters can be used to temporarily store onions and plates while you do something else. Both players have access to shared counters (s0, s1, s2) which can be used to transfer onions and plates depending on the situation. Note that the objects on the shared counters can be accessed by both players. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","action history: pick up onion from s0., place onion in c0., pick up onion from s1., place onion in c0.
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Bob's location information>: o0 is 0 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 contains onion. s1 is empty. s2 contains onion. k1 is inaccessible. k4 is 1 units away. k4 contains onion. k5 is 2 units away. k5 contains onion. k7 is inaccessible. 


Available Actions: [pick up onion from k4., pick up onion from k5., pick up onion from s0., pick up onion from s2., wait., move away.]. ","action history: pick up onion from s0., place onion in c0., pick up onion from s1., place onion in c0.
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Bob's location information>: o0 is 0 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 contains onion. s1 is empty. s2 contains onion. k1 is inaccessible. k4 is 1 units away. k4 contains onion. k5 is 2 units away. k5 contains onion. k7 is inaccessible. 

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up plate from s0., pick up plate from s1., pick up plate from s2., place onion in c0., place onion in c1., place onion on k1., place plate on k1., place onion in s0., place onion in s1., place onion in s2.,  place plate in s0., place plate in s1., place plate in s2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.].","action history: pick up onion from s0., place onion in c0., pick up onion from s1., place onion in c0.
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Bob's location information>: o0 is 0 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 contains onion. s1 is empty. s2 contains onion. k1 is inaccessible. k4 is 1 units away. k4 contains onion. k5 is 2 units away. k5 contains onion. k7 is inaccessible. 

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on k1.
M. place plate on k1.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
Y. pick up onion from k4.
Z. pick up onion from k5.",D,pick up onion from s0.,"<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Bob's location information>: o0 is 0 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 contains onion. s1 is empty. s2 contains onion. k1 is inaccessible. k4 is 1 units away. k4 contains onion. k5 is 2 units away. k5 contains onion. k7 is inaccessible. 


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
","A,C","pick up plate from p0., pick up onion from o0. ","<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Bob's location information>: o0 is 0 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 contains onion. s1 is empty. s2 contains onion. k1 is inaccessible. k4 is 1 units away. k4 contains onion. k5 is 2 units away. k5 contains onion. k7 is inaccessible. 


What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up plate from s0.
H. pick up plate from s1.
I. pick up plate from s2.
J. place onion in c0.
K. place onion in c1.
L. place onion on closest kitchen counter.
M. place plate on closest kitchen counter.
N. place onion in s0.
O. place onion in s1.
P. place onion in s2.
Q. place plate in s0.
R. place plate in s1.
S. place plate in s2.
T. load soup on plate from c0.
U. load soup on plate from c1.
V. place soup for delivery in d0.
W. wait.
X. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",Environmental Awareness,"pick up onion from s0.',","pick up onion from k4.',",0,,1,"action history: pick up onion from s0., place onion in c0., pick up onion from s1., place onion in c0.
<Inventory>: I am holding nothing. Bob is holding nothing.
<My location information:> o0 is inaccessible. o1 is inaccessible. p0 is inaccessible. d0 is 2 units away. c0 is 0 units away. c1 is 0 units away. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Bob's location information>: o0 is 0 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is inaccessible. c1 is inaccessible. s0 is 0 units away. s1 is 1 units away. s2 is 2 units away. 
<Environment Details>: c0 contains 2 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s0 contains onion. s1 is empty. s2 contains onion. k1 is inaccessible. k4 is 1 units away. k4 contains onion. k5 is 2 units away. k5 contains onion. k7 is inaccessible. 


What action should I take next? 
Available Actions: 
A. pick up onion from k4.
B. pick up onion from k5.
C. pick up onion from s0.
D. pick up onion from s2.
E. wait.
F. move away..
"
pick up onion from nearest counter when dispenser is blocked,Coordination Ring,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is narrow and circular, featuring onion dispensers (o0, o1), plate dispenser (p0), cookers (c0, c1), and a delivery area (d0). Additionally there are kitchen counters (k0 to k10) which should only be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers. 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: 
<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 
         
Available Action: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., wait., move away.]","my action history: 
<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 
         
Available Action: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., place onion in c0., place onion in c1., place onion in k2., place plate in k2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.]","my action history: 
<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 
         
Available Action: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion in c0.
F. place onion in c1.
G. place onion in k2.
H. place plate in k2.
I. load soup on plate from c0.
J. load soup on plate from c1.
K. place soup for delivery in d0.
L. wait.
M. move away.
",D,pick up onion from k5.,"<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 

What action does my partner intend to take? 

         
Available Action: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion in c0.
F. place onion in c1.
G. place onion on closest kitchen counter.
H. place plate on closest kitchen counter.
I. load soup on plate from c0.
J. load soup on plate from c1.
K. place soup for delivery in d0.
L. wait.
M. move away.
","A,B","pick up onion from o0., pick up onion from o1.","<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 

What action does my partner intend to take? 

         
Available Action: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion in c0.
F. place onion in c1.
G. place onion on closest kitchen counter.
H. place plate on closest kitchen counter.
I. load soup on plate from c0.
J. load soup on plate from c1.
K. place soup for delivery in d0.
L. wait.
M. move away.
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Adaptability","pick up onion from k1.',","pick up onion from o0.',",1,,1,"my action history: 
<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 
         
Available Action: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., wait., move away.]What action should I take next? 
Available Actions: 
A. my action history: 
<Inventory>: I am holding nothing. Bob is holding nothing. 
<My Location Information>: o0 is 4 units away blocked by Bob. o1 is 4 units away blocked by Bob. p0 is 3 units away. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away. 

<Bob's Location Information>: o0 is 0 units away. o1 is 0 units away. p0 is 1 units away. c0 is 4 units away blocked by Alice. c1 is 4 units away blocked by Alice. d0 is 1 units away.
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. k5 contains onion 
         
Available Action: pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. wait.
F. move away.
"
move away from a cooker if it is not useful to you,Coordination Ring,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is narrow and circular, featuring onion dispensers (o0, o1), plate dispenser (p0), cookers (c0, c1), and a delivery area (d0). Additionally there are kitchen counters (k0 to k10) which should only be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers. 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history:  pick up onion from o0., place onion in c1., pick up onion from k5., place onion in c1., 

<Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  
Available Action: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., wait., move away.]","my action history:  pick up onion from o0., place onion in c1., pick up onion from k5., place onion in c1., 

<Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  
Available Action: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., place onion in c0., place onion in c1., place onion in k2., place plate in k2., load soup on plate from c0., load soup on plate from c1., place soup for delivery in d0., wait., move away.]","my action history:  pick up onion from o0., place onion in c1., pick up onion from k5., place onion in c1., 

<Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  

Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion in c0.
F. place onion in c1.
G. place onion in k2.
H. place plate in k2.
I. load soup on plate from c0.
J. load soup on plate from c1.
K. place soup for delivery in d0.
L. wait.
M. move away.
",M,move away.,"<Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  

What action does my partner intend to take? 

  
Available Action: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion in c0.
F. place onion in c1.
G. place onion on closest kitchen counter.
H. place plate on closest kitchen counter.
I. load soup on plate from c0.
J. load soup on plate from c1.
K. place soup for delivery in d0.
L. wait.
M. move away.
","I, L","wait., load soup on plate from c0.","<Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  

What action does my partner intend to take? 

  
Available Action: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k5.
E. place onion in c0.
F. place onion in c1.
G. place onion on closest kitchen counter.
H. place plate on closest kitchen counter.
I. load soup on plate from c0.
J. load soup on plate from c1.
K. place soup for delivery in d0.
L. wait.
M. move away.
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Partner Aware Planning","load soup on plate from c0.',","wait.',",1,,1,"my action history:  pick up onion from o0., place onion in c1., pick up onion from k5., place onion in c1., 

<Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  
Available Action: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k5., wait., move away.]What action should I take next? 
Available Actions: 
A. my action history:  pick up onion from o0.
B. place onion in c1.
C. pick up onion from k5.
D. place onion in c1.
E. <Inventory>: I am holding nothing. Bob is holding plate. 

<My Location Information>: o0 is 4 units away. o1 is 4 units away. p0 is 3 units away blocked by Bob. c0 is 0 units away. c1 is 0 units away. d0 is 3 units away. k5 is 2 units away. Closest empty kitchen counter k2 is 1 units away.  
  
<Bob's Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 0 units away. c0 is 3 units away blocked by Alice. c1 is 3 units away blocked by Alice. d0 is 2 units away.  
  
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is cooked. c1 contains 3 out of 3 onions. c1 is on. soup in c1 is still cooking. 
  
Available Action: pick up onion from o0.
F. pick up onion from o1.
G. pick up plate from p0.
H. pick up onion from k5.
I. wait.
J. move away.
"
Avoiding unnecessary movements,Cramped Room,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is rectangular with 2 onions dispensers (o0, o1), cooker (c0), plate dispenser (p0) and delivery area (d0). Additionally there are kitchen counters (k0 to k8) which can be used to temporarily store onions and plates while you do something else. Objects on counters can be picked up later and should be considered as they may be closer than items in dispensers.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: place onion in c0., place onion in c0., place onion on k4., pick up plate from p0., load soup on plate from c0.. 

<Inventory>: I am holding empty plate. Bob is holding empty plate. 

<My location information:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away blocked by Bob. d0 is 2 units away. c0 is 0 units away. 

<Bob's location information>: o0 is 1 units away. o1 is 3 units away. p0 is 0 units away. d0 is 2 units away. c0 is 2 units away blocked by Alice. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. k1 is 1 units away. k1 contains onion. Closest empty kitchen counter k2 is 1 units away.  

Available Actions: [load soup on plate from c0., place plate on k2., wait., move away.]. ","my action history: place onion in c0., place onion in c0., place onion on k4., pick up plate from p0., load soup on plate from c0.. 

<Inventory>: I am holding empty plate. Bob is holding empty plate. 

<My location information:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away blocked by Bob. d0 is 2 units away. c0 is 0 units away. 

<Bob's location information>: o0 is 1 units away. o1 is 3 units away. p0 is 0 units away. d0 is 2 units away. c0 is 2 units away blocked by Alice. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. k1 is 1 units away. k1 contains onion. Closest empty kitchen counter k2 is 1 units away. 
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from k1., place onion on k2., place plate on k2., place onion in c0., load soup on plate from c0., place soup for delivery in d0., wait., move away.].","my action history: place onion in c0., place onion in c0., place onion on k4., pick up plate from p0., load soup on plate from c0.. 

<Inventory>: I am holding empty plate. Bob is holding empty plate. 

<My location information:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away blocked by Bob. d0 is 2 units away. c0 is 0 units away. 

<Bob's location information>: o0 is 1 units away. o1 is 3 units away. p0 is 0 units away. d0 is 2 units away. c0 is 2 units away blocked by Alice. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. k1 is 1 units away. k1 contains onion. Closest empty kitchen counter k2 is 1 units away. 
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k1.
E. place onion on k2.
F. place plate on k2.
G. place onion in c0.
H. load soup on plate from c0.
I. place soup for delivery in d0.
J. wait.
K. move away..
",J,wait.,"<Inventory>: I am holding empty plate. Bob is holding empty plate. 

<My location information:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away blocked by Bob. d0 is 2 units away. c0 is 0 units away. 

<Bob's location information>: o0 is 1 units away. o1 is 3 units away. p0 is 0 units away. d0 is 2 units away. c0 is 2 units away blocked by Alice. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. k1 is 1 units away. k1 contains onion. Closest empty kitchen counter k2 is 1 units away. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k1.
E. place onion on closest kitchen counter.
F. place plate on closest kitchen counter.
G. place onion in c0.
H. load soup on plate from c0.
I. place soup for delivery in d0.
J. wait.
K. move away..
","F,J",place plate on closest kitchen counter.,"<Inventory>: I am holding empty plate. Bob is holding empty plate. 

<My location information:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away blocked by Bob. d0 is 2 units away. c0 is 0 units away. 

<Bob's location information>: o0 is 1 units away. o1 is 3 units away. p0 is 0 units away. d0 is 2 units away. c0 is 2 units away blocked by Alice. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. k1 is 1 units away. k1 contains onion. Closest empty kitchen counter k2 is 1 units away. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from k1.
E. place onion on closest kitchen counter.
F. place plate on closest kitchen counter.
G. place onion in c0.
H. load soup on plate from c0.
I. place soup for delivery in d0.
J. wait.
K. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Partner Aware Planning","wait.',","move away.',",0/1,,1,"my action history: place onion in c0., place onion in c0., place onion on k4., pick up plate from p0., load soup on plate from c0.. 

<Inventory>: I am holding empty plate. Bob is holding empty plate. 

<My location information:> o0 is 1 units away. o1 is 1 units away. p0 is 2 units away blocked by Bob. d0 is 2 units away. c0 is 0 units away. 

<Bob's location information>: o0 is 1 units away. o1 is 3 units away. p0 is 0 units away. d0 is 2 units away. c0 is 2 units away blocked by Alice. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. k1 is 1 units away. k1 contains onion. Closest empty kitchen counter k2 is 1 units away.  

What action should I take next? 
Available Actions: 
A. load soup on plate from c0.
B. place plate on k2.
C. wait.
D. move away..
"
open gate for the other agent,Locked,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is divided into 2 partitions. Alice is in the left partition with access to onion dispenser o0, plate dispenser p1, cooker c0, and delivery area d0. Bob is in the right partition with access to onion dispenser o1, plate dispenser p0, and cooker c1.  The two partitions are connected by gate g0 which can be opened if a player is holding nothing. Opening the gate will allow players to move freely between partitions.  The gate will close after enough time automatically.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: place onion in c0., pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 1 units away. d0 is 2 units away. c0 is 0 units away. c1 is inaccessible. g0 is 2 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 

Available Actions: [pick up onion from o0., pick up plate from p1., open g0., wait., move away.]. ","my action history: place onion in c0., pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 1 units away. d0 is 2 units away. c0 is 0 units away. c1 is inaccessible. g0 is 2 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up plate from p1., place onion in c0., place onion in c1., load soup on plate from c0., load soup on plate from c1., deliver soup in d0., open g0., wait., move away.].","my action history: place onion in c0., pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 1 units away. d0 is 2 units away. c0 is 0 units away. c1 is inaccessible. g0 is 2 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from p1.
E. place onion in c0.
F. place onion in c1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. deliver soup in d0.
J. open g0.
K. wait.
L. move away..
",J,open g0.,"<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 1 units away. d0 is 2 units away. c0 is 0 units away. c1 is inaccessible. g0 is 2 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from p1.
E. place onion in c0.
F. place onion in c1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for deliver in d0.
J. open g0.
K. wait.
L. move away..
","I,K",deliver soup in d0.,"<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 1 units away. d0 is 2 units away. c0 is 0 units away. c1 is inaccessible. g0 is 2 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from p1.
E. place onion in c0.
F. place onion in c1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. deliver soup in d0.
J. open g0.
K. wait.
L. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Theory of Mind, Partner Aware Planning","pick up onion from o0.',","wait.',",0,,0,"my action history: place onion in c0., pick up onion from o0., place onion in c0., pick up onion from o0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 1 units away. d0 is 2 units away. c0 is 0 units away. c1 is inaccessible. g0 is 2 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 3 out of 3 onions. c0 is on. soup in c0 is still cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up plate from p1.
C. open g0.
D. wait.
E. move away..
"
open gate without waiting to put your own onions in,Locked,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is divided into 2 partitions. Alice is in the left partition with access to onion dispenser o0, plate dispenser p1, cooker c0, and delivery area d0. Bob is in the right partition with access to onion dispenser o1, plate dispenser p0, and cooker c1.  The two partitions are connected by gate g0 which can be opened if a player is holding nothing. Opening the gate will allow players to move freely between partitions.  The gate will close after enough time automatically.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: place onion in c0., pick up plate from p1., wait., load soup on plate from c0., deliver soup in d0.,

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 3 units away. d0 is 0 units away. c0 is 2 units away. c1 is inaccessible. g0 is 0 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         

Available Actions: [pick up onion from o0., pick up plate from p1., open g0., wait., move away.]. ","my action history: place onion in c0., pick up plate from p1., wait., load soup on plate from c0., deliver soup in d0.,

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 3 units away. d0 is 0 units away. c0 is 2 units away. c1 is inaccessible. g0 is 0 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up plate from p1., place onion in c0., place onion in c1., load soup on plate from c0., load soup on plate from c1., deliver soup in d0., open g0., wait., move away.].","my action history: place onion in c0., pick up plate from p1., wait., load soup on plate from c0., deliver soup in d0.,

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 3 units away. d0 is 0 units away. c0 is 2 units away. c1 is inaccessible. g0 is 0 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from p1.
E. place onion in c0.
F. place onion in c1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. deliver soup in d0.
J. open g0.
K. wait.
L. move away..
",J,open g0.,"my action history: place onion in c0., pick up plate from p1., wait., load soup on plate from c0., deliver soup in d0.,

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 3 units away. d0 is 0 units away. c0 is 2 units away. c1 is inaccessible. g0 is 0 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from p1.
E. place onion in c0.
F. place onion in c1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. place soup for deliver in d0.
J. open g0.
K. wait.
L. move away..
","I,K",deliver soup in d0.,"my action history: place onion in c0., pick up plate from p1., wait., load soup on plate from c0., deliver soup in d0.,

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 3 units away. d0 is 0 units away. c0 is 2 units away. c1 is inaccessible. g0 is 0 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up plate from p1.
E. place onion in c0.
F. place onion in c1.
G. load soup on plate from c0.
H. load soup on plate from c1.
I. deliver soup in d0.
J. open g0.
K. wait.
L. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Theory of Mind, Partner Aware Planning","pick up onion from o0.',","pick up onion from o0.',",1,,0,"my action history: place onion in c0., pick up plate from p1., wait., load soup on plate from c0., deliver soup in d0.,

<Inventory>: I am holding nothing. Bob is holding soup. 

<My location information:> o0 is 2 units away. o1 is inaccessible. p0 is inaccessible. p1 is 3 units away. d0 is 0 units away. c0 is 2 units away. c1 is inaccessible. g0 is 0 units away. 

<Bob's location information>: o0 is inaccessible. o1 is 2 units away. p0 is 2 units away. p1 is inaccessible. d0 is inaccessible. c0 is inaccessible. c1 is 0 units away. g0 is 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. g0 is closed. 
         

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up plate from p1.
C. open g0.
D. wait.
E. move away..
"
stop your cooking process and open door to stop wasting partner's time,Gated Delivery,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is rectangular with 2 onions dispensers (o0, o1), cooker (c0) and plate dispenser (p0). The delivery area (d0) is inaccessible behind closed gates and can be accessed by opening one of the gates (g0, g1). A gate can only be opened by a player if they are not carrying an object. Once the door is opened it will only stay open for a brief time and then close on its own 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: wait., wait., wait., place onion in c0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away blocked by Bob. 

<Bob's location information>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 2 units away. g1 is 0 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.

Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., open g0., open g1., wait., move away.]. ","my action history: wait., wait., wait., place onion in c0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away blocked by Bob. 

<Bob's location information>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 2 units away. g1 is 0 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., place onion in c0., load soup on plate from c0., place soup for deliver in d0., open g0., open g1., wait., move away.].","my action history: wait., wait., wait., place onion in c0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away blocked by Bob. 

<Bob's location information>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 2 units away. g1 is 0 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",H,open g1.,"my action history: wait., wait., wait., place onion in c0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away blocked by Bob. 

<Bob's location information>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 2 units away. g1 is 0 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
","F,I",deliver soup in d0.,"my action history: wait., wait., wait., place onion in c0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away blocked by Bob. 

<Bob's location information>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 2 units away. g1 is 0 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Theory of Mind, Partner Aware Planning","pick up plate from p0.',","pick up onion from o1.',",0,,0,"my action history: wait., wait., wait., place onion in c0., place onion in c0.. 

<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away blocked by Bob. 

<Bob's location information>: o0 is 3 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 2 units away. g1 is 0 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.

What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. open g0.
E. open g1.
F. wait.
G. move away..
"
"don't wait around, open gate for partner",Gated Delivery,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is rectangular with 2 onions dispensers (o0, o1), cooker (c0) and plate dispenser (p0). The delivery area (d0) is inaccessible behind closed gates and can be accessed by opening one of the gates (g0, g1). A gate can only be opened by a player if they are not carrying an object. Once the door is opened it will only stay open for a brief time and then close on its own 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

`","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: wait., wait., wait., place onion in c0., place onion in c0.. 
<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Bob's location information>: o0 is 2 units away. o1 is 2 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 1 units away. g1 is 1 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., open g0., open g1., wait., move away.]. ","my action history: wait., wait., wait., place onion in c0., place onion in c0.. 
<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Bob's location information>: o0 is 2 units away. o1 is 2 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 1 units away. g1 is 1 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., place onion in c0., load soup on plate from c0., place soup for deliver in d0., open g0., open g1., wait., move away.].","my action history: wait., wait., wait., place onion in c0., place onion in c0.. 
<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Bob's location information>: o0 is 2 units away. o1 is 2 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 1 units away. g1 is 1 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",G,open g0.,"my action history: wait., wait., wait., place onion in c0., place onion in c0.. 
<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Bob's location information>: o0 is 2 units away. o1 is 2 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 1 units away. g1 is 1 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
","F,I",deliver soup in d0.,"my action history: wait., wait., wait., place onion in c0., place onion in c0.. 
<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Bob's location information>: o0 is 2 units away. o1 is 2 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 1 units away. g1 is 1 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",,,,open g1.,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Theory of Mind, Partner Aware Planning","pick up plate from p0.',","pick up plate from p0.',",1,,0,"my action history: wait., wait., wait., place onion in c0., place onion in c0.. 
<Inventory>: I am holding nothing. Bob is holding soup.

<My Location Information>: o0 is 1 units away. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Bob's location information>: o0 is 2 units away. o1 is 2 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Alice. g0 is 1 units away. g1 is 1 units away. 

<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. g0 is closed. g1 is closed.
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. open g0.
E. open g1.
F. wait.
G. move away..
"
"don't open gate if the other agent's soup is not ready, also wait",Gated Delivery,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is rectangular with 2 onions dispensers (o0, o1), cooker (c0) and plate dispenser (p0). The delivery area (d0) is inaccessible behind closed gates and can be accessed by opening one of the gates (g0, g1). A gate can only be opened by a player if they are not carrying an object. Once the door is opened it will only stay open for a brief time and then close on its own 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: pick up onion from o0., place onion in c0., pick up onion from o0.,

<Inventory>: I am holding onion. Bob is holding plate. 

<My Location Information>: o0 is 0 units away. o1 is 4 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Bob. g0 is 1 units away. g1 is 3 units away. 

<Bob's Location information>: o0 is blocked by Alice. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. g0 is closed. g1 is closed. 

Available Actions: [place onion in c0., wait., move away.]. ","my action history: pick up onion from o0., place onion in c0., pick up onion from o0.,

<Inventory>: I am holding onion. Bob is holding plate. 

<My Location Information>: o0 is 0 units away. o1 is 4 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Bob. g0 is 1 units away. g1 is 3 units away. 

<Bob's Location information>: o0 is blocked by Alice. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. g0 is closed. g1 is closed. 
        
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., place onion in c0., load soup on plate from c0., place soup for deliver in d0., open g0., open g1., wait., move away.].","my action history: pick up onion from o0., place onion in c0., pick up onion from o0.,

<Inventory>: I am holding onion. Bob is holding plate. 

<My Location Information>: o0 is 0 units away. o1 is 4 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Bob. g0 is 1 units away. g1 is 3 units away. 

<Bob's Location information>: o0 is blocked by Alice. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. g0 is closed. g1 is closed. 
        
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",I,wait.,"my action history: pick up onion from o0., place onion in c0., pick up onion from o0.,

<Inventory>: I am holding onion. Bob is holding plate. 

<My Location Information>: o0 is 0 units away. o1 is 4 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Bob. g0 is 1 units away. g1 is 3 units away. 

<Bob's Location information>: o0 is blocked by Alice. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. g0 is closed. g1 is closed. 
        

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",E,load soup on plate from c0.,"my action history: pick up onion from o0., place onion in c0., pick up onion from o0.,

<Inventory>: I am holding onion. Bob is holding plate. 

<My Location Information>: o0 is 0 units away. o1 is 4 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Bob. g0 is 1 units away. g1 is 3 units away. 

<Bob's Location information>: o0 is blocked by Alice. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. g0 is closed. g1 is closed. 
        

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. place onion in c0.
E. load soup on plate from c0.
F. place soup for deliver in d0.
G. open g0.
H. open g1.
I. wait.
J. move away..
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ","Environmental Awareness, Theory of Mind","place onion in c0.',","move away.',",1,,1,"my action history: pick up onion from o0., place onion in c0., pick up onion from o0.,

<Inventory>: I am holding onion. Bob is holding plate. 

<My Location Information>: o0 is 0 units away. o1 is 4 units away. p0 is 1 units away. d0 is inaccessible. c0 is blocked by Bob. g0 is 1 units away. g1 is 3 units away. 

<Bob's Location information>: o0 is blocked by Alice. o1 is 1 units away. p0 is 2 units away. d0 is inaccessible. c0 is 0 units away. g0 is 2 units away. g1 is 2 units away. 

<Environment Details>: c0 contains 3 out of 3 onions. c0 is off. soup in c0 is cooked. g0 is closed. g1 is closed. 

What action should I take next? 
Available Actions: 
A. place onion in c0.
B. wait.
C. move away..
"
"You are close to onion dispenser, Partner is close to cooker both are equidistant from shared counter",Counter Circuit,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is circular with two onion dispensers (o0, o1), plate dispenser (p0), cookers (c0, c1) and delivery area d0. There are also the shared counters (s0, s1, s2, s3) which can be used to pass objects from one player to the other. Additionally there are kitchen counters (k0 to k15) which can be used to temporarily store onions and plates while you do something else.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: wait., pick up onion from o0., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.

Available Action: [place onion on s0., place onion on s1., place onion on s2,. place onion on s3., place onion in c0., place onion in c1., place onion on k12., wait., move away.,].","my action history: wait., pick up onion from o0., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. 
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up onion from s3., pick up plate from s0., pick up plate from s1., pick up plate from s2., pick up plate from s3., place onion on s0., place onion on s1., place onion on s2,. place onion on s3., place plate in s0., place plate in s1., place plate in s1., place plate in s2., place onion in c0., place onion in c1., place onion on k12., load soup on plate from c0., load soup on plate from c1., deliver soup in d0., wait., move away.,].","my action history: wait., pick up onion from o0., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. 
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up onion from s3.
H. pick up plate from s0.
I. pick up plate from s1.
J. pick up plate from s2.
K. pick up plate from s3.
L. place onion on s0.
M. place onion on s1.
N. place onion on s2
O. place onion on s3.
P. place plate in s0.
Q. place plate in s1.
R. place plate in s1.
S. place plate in s2.
T. place onion in c0.
U. place onion in c1.
V. place onion on k12.
W. load soup on plate from c0.
X. load soup on plate from c1.
Y. deliver soup in d0.
Z. wait.

",M,place onion in s1.,"<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up onion from s3.
H. pick up plate from s0.
I. pick up plate from s1.
J. pick up plate from s2.
K. pick up plate from s3.
L. place onion on s0.
M. place onion on s1.
N. place onion on s2
O. . place onion on s3.
P. place plate in s0.
Q. place plate in s1.
R. place plate in s1.
S. place plate in s2.
T. place onion in c0.
U. place onion in c1.
V. place onion on closest kitchen counter.
W. load soup on plate from c0.
X. load soup on plate from c1.
Y. deliver soup in d0.
Z. wait.
[. move away.
\. .
",E,pick up onion from s1.,"<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. 
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up onion from s3.
H. pick up plate from s0.
I. pick up plate from s1.
J. pick up plate from s2.
K. pick up plate from s3.
L. place onion on s0.
M. place onion on s1.
N. place onion on s2
O. . place onion on s3.
P. place plate in s0.
Q. place plate in s1.
R. place plate in s1.
S. place plate in s2.
T. place onion in c0.
U. place onion in c1.
V. place onion on closest kitchen counter.
W. load soup on plate from c0.
X. load soup on plate from c1.
Y. deliver soup in d0.
Z. wait.
[. move away.
\. .
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",,"place onion in c0.',","place onion in c0.',",0,,0,"my action history: wait., pick up onion from o0., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.

Available Action: [place onion on s0., place onion on s1., place onion on s2,. place onion on s3., place onion in c0., place onion in c1., place onion on k12., wait., move away.,].What action should I take next? 
Available Actions: 
A. my action history: wait.
B. pick up onion from o0.
C. <Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 1 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking.

Available Action: place onion on s0.
D. place onion on s1.
E. place onion on s2
F. . place onion on s3.
G. place onion in c0.
H. place onion in c1.
I. place onion on k12.
J. wait.
K. move away.
L. .
"
"You are close to onion dispenser, Partner is close to cooker both are equidistant from shared counter (Minor variation)",Counter Circuit,"In the game Overcooked, I am Alice, my teammate is Bob. 
Our environment is circular with two onion dispensers (o0, o1), plate dispenser (p0), cookers (c0, c1) and delivery area d0. There are also the shared counters (s0, s1, s2, s3) which can be used to pass objects from one player to the other. Additionally there are kitchen counters (k0 to k15) which can be used to temporarily store onions and plates while you do something else.
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

","I'll provide my action history, current state, teammate's status, and my possible actions. Help me select the best action from the list. Format your response as: Explanation: <rationale for selecting next action> Action: <selected_action>. Only select one action. Do not say anything else. Got it?","I'll provide the current state, and possible actions. Help me predict my partner's intention. Partner's intention should be an action from the list of all available actions. Format your response as: Explanation: <rationale for predicting partner' intention> Action: <partner's intention>. Only select one action as partner's intention. Do not say anything else. Got it?","I'll provide the current state, a question about the environment, and the possible options for the answer. Help me answer the question. Format your response as: Explanation: <explanation for answering the questions> Answer: <Answer to the provided question>. Only select one answer from the provided list. Do not say anything else. Got it?","my action history: wait., pick up onion from o0., place onion on s1., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion

Available Action: [place onion on s0., place onion on s1., place onion on s2,. place onion on s3., place onion in c0., place onion in c1., place onion on k12., wait., move away.,].","my action history: wait., pick up onion from o0., place onion on s1., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion
         
Available Actions: [pick up onion from o0., pick up onion from o1., pick up plate from p0., pick up onion from s0., pick up onion from s1., pick up onion from s2., pick up onion from s3., pick up plate from s0., pick up plate from s1., pick up plate from s2., pick up plate from s3., place onion on s0., place onion on s1., place onion on s2,. place onion on s3., place plate in s0., place plate in s1., place plate in s1., place plate in s2., place onion in c0., place onion in c1., place onion on k12., load soup on plate from c0., load soup on plate from c1., deliver soup in d0., wait., move away.,].","my action history: wait., pick up onion from o0., place onion on s1., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion
         
What action should I take next? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up onion from s3.
H. pick up plate from s0.
I. pick up plate from s1.
J. pick up plate from s2.
K. pick up plate from s3.
L. place onion on s0.
M. place onion on s1.
N. place onion on s2
O. . place onion on s3.
P. place plate in s0.
Q. place plate in s1.
R. place plate in s1.
S. place plate in s2.
T. place onion in c0.
U. place onion in c1.
V. place onion on k12.
W. load soup on plate from c0.
X. load soup on plate from c1.
Y. deliver soup in d0.
Z. wait.
[. move away.
\. .
","L,N","place onion in s0., place onion in s2.","<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up onion from s3.
H. pick up plate from s0.
I. pick up plate from s1.
J. pick up plate from s2.
K. pick up plate from s3.
L. place onion on s0.
M. place onion on s1.
N. place onion on s2
O. . place onion on s3.
P. place plate in s0.
Q. place plate in s1.
R. place plate in s1.
S. place plate in s2.
T. place onion in c0.
U. place onion in c1.
V. place onion on closest kitchen counter.
W. load soup on plate from c0.
X. load soup on plate from c1.
Y. deliver soup in d0.
Z. wait.
[. move away.
\. .
","D,F","pick up onion from s0., pick up onion from s2","<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion
         

What action does my partner intend to take? 
Available Actions: 
A. pick up onion from o0.
B. pick up onion from o1.
C. pick up plate from p0.
D. pick up onion from s0.
E. pick up onion from s1.
F. pick up onion from s2.
G. pick up onion from s3.
H. pick up plate from s0.
I. pick up plate from s1.
J. pick up plate from s2.
K. pick up plate from s3.
L. place onion on s0.
M. place onion on s1.
N. place onion on s2
O. . place onion on s3.
P. place plate in s0.
Q. place plate in s1.
R. place plate in s1.
S. place plate in s2.
T. place onion in c0.
U. place onion in c1.
V. place onion on closest kitchen counter.
W. load soup on plate from c0.
X. load soup on plate from c1.
Y. deliver soup in d0.
Z. wait.
[. move away.
\. .
",,,,,"In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You will be provided with the the latest state information after my partner took their last action. You will respond with a summary of my partnerâ€™s beliefs, intentions and possible next actions. You will also make a suggestion of what I should do next based on my partner's position and inventory. Think about the environment layout, think about Bob's location, think about my location. ","In the game Overcooked, I am Alice, my teammate is Bob. 
        {EnvDescriptions[self.layout_name]} 
We must coordinate to make soup with 3 onions. Once a soup is cooked it needs to be placed on a plate and delivered. My goal is to maximize the number of cooked soups and deliveries. The game has the following rules:
        - A player can only pick up one onion or plate at a time. 
        - A soup can only be loaded onto plate by a player if they are holding a plate.
        - Selected action must be in the list of available actions        

Bob and I have decided to follow the following conventions: 
        - If we are in the same section of workspace, we will minimize our movement to avoid getting in each other's way.  
        - We will start preparing the next soup while the one before is being cooked/delivered.
        - We will make optimal use of all available cookers, and counters.
        - We will take actions that ensures as many soups are delivered as possible

You are an action verification agent for Overcooked. I will provide you with an action and you need to check whether the action satisfies the criteria: 1. Rule Following: It follows to the rules of the game. 2. Convention Following: It adheres to the mentioned conventions 3. Safety: It does not lead to incorrect states or the game being stuck. End your response with ""Verification: Okay"" if selected action follows ***all three*** criteria and ""Verification: Not Okay"" otherwise. ",,place onion on s1.',place onion in c0.',0,,0,"my action history: wait., pick up onion from o0., place onion on s1., 

<Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion

Available Action: [place onion on s0., place onion on s1., place onion on s2,. place onion on s3., place onion in c0., place onion in c1., place onion on k12., wait., move away.,].What action should I take next? 
Available Actions: 
A. my action history: wait.
B. pick up onion from o0.
C. place onion on s1.
D. <Inventory>: I am holding onion. Bob is holding nothing. 

<My Location Information>: o0 is 0 units away. o1 is 1 units away. p0 is 3 units away. c0 is 6 units away blocked by Bob. c1 is 7 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. Closest empty kitchen counter k12 is 1 units away. 

<Bob's Location Information>: o0 is blocked by Alice. o1 is 7 units away. p0 is 3 units away. c0 is 0 units away. c1 is 1 units away. d0 is 4 units away. s0 is 1 units away. s1 is 0 units away. s2 is 1 units away. s3 in 2 units away. 
         
<Environment Details>: c0 contains 0 out of 3 onions. c0 is off. soup in c0 is not cooking. c1 contains 0 out of 3 onions. c1 is off. soup in c1 is not cooking. s1 contains onion

Available Action: place onion on s0.
E. place onion on s1.
F. place onion on s2
G. . place onion on s3.
H. place onion in c0.
I. place onion in c1.
J. place onion on k12.
K. wait.
L. move away.
M. .
"